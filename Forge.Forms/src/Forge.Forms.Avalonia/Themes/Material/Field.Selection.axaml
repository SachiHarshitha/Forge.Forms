<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:defaults="clr-namespace:Forge.Forms.AvaloniaUI.FormBuilding.Defaults"
    xmlns:formBuilding="clr-namespace:Forge.Forms.AvaloniaUI.FormBuilding"
    xmlns:internal="clr-namespace:Forge.Forms.AvaloniaUI.Controls.Internal"
    xmlns:packIcon="clr-namespace:MaterialDesign.Avalonia.PackIcon;assembly=MaterialDesign.Avalonia.PackIcon"
    xmlns:valueConverters="clr-namespace:Forge.Forms.AvaloniaUI.DynamicExpressions.ValueConverters"
    xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
    xmlns:annotations="clr-namespace:Forge.Forms.AvaloniaUI.Annotations">
    <valueConverters:IsNotEmptyConverter x:Key="IsNotEmptyConverter" />
    <valueConverters:ItemStringFormatter x:Key="ItemFormatter" />
    <formBuilding:FormBindingConverter x:Key="FormBindingConverter" />
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ControlTemplate x:Key="MaterialComboBoxSelectionPresenterTemplate">
                <Grid Margin="8" IsVisible="{formBuilding:FormBinding IsVisible}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <packIcon:PackIcon
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Center"
                        Theme="{DynamicResource MaterialColoredIconStyle}"
                        VerticalAlignment="Center"
                        IsVisible="{formBuilding:FormBinding IconVisibility}"
                        Kind="{formBuilding:FormBinding Icon}" />
                    <ComboBox
                        Name="ValueHolderControl"
                        Grid.Column="1"
                        PlaceholderText="{formBuilding:FormBinding ToolTip}"
                        assists:ComboBoxAssist.Label="{Binding DataContext, Converter={StaticResource FormBindingConverter}, ConverterParameter=Name}"
                        internal:FocusHelper.InitialFocus="{formBuilding:FormBinding InitialFocus}"
                        DisplayMemberBinding="{formBuilding:FormBinding DisplayPath}"
                        IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                        ItemsSource="{formBuilding:FormBinding ItemsSource}"
                        SelectedValue="{formBuilding:FormBinding Value}"
                        SelectedValueBinding="{formBuilding:FormBinding ValuePath}"
                        ToolTip.Tip="{formBuilding:FormBinding ToolTip}">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                        <ComboBox.ItemTemplate>
                            <!--<DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource ItemFormatter}, ConverterParameter={Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}}}" />
                        </DataTemplate>-->
                        </ComboBox.ItemTemplate>
                        <ComboBox.Styles>
                            <Style
                                Selector="defaults|SelectionPresenter /template/ ComboBox#ValueHolderControl /template/ Panel#PART_InnerPanel">
                                <Setter Property="Margin" Value="0 25 0 0" />
                            </Style>
                        </ComboBox.Styles>
                    </ComboBox>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MaterialEditableComboBoxSelectionPresenterTemplate">
                <Grid IsVisible="{formBuilding:FormBinding IsVisible}"
                      Margin="8"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <packIcon:PackIcon
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Theme="{DynamicResource MaterialColoredIconStyle}"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsVisible="{formBuilding:FormBinding IconVisibility}"
                        Kind="{formBuilding:FormBinding Icon}" />
                    <internal:EditableComboBox
                        Name="ValueHolderControl"
                        Grid.Column="1"
                        PlaceholderText="{formBuilding:FormBinding ToolTip}"
                        internal:FocusHelper.InitialFocus="{formBuilding:FormBinding InitialFocus}"
                        DisplayMemberBinding="{formBuilding:FormBinding DisplayPath}"
                        IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                        assists:ComboBoxAssist.Label="{Binding DataContext, Converter={StaticResource FormBindingConverter}, ConverterParameter=Name}"
                        ItemsSource="{formBuilding:FormBinding ItemsSource}"
                        SelectedValue="{formBuilding:FormBinding Value}"
                        ToolTip.Tip="{formBuilding:FormBinding ToolTip}" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MaterialRadioButtonsSelectionPresenterTemplate"
                             TargetType="{x:Type defaults:SelectionPresenter}">
                <Grid IsVisible="{formBuilding:FormBinding IsVisible}"
                      Margin="8"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center">
                    <Interaction.Behaviors>
                        <DataTriggerBehavior
                            Binding="{Binding #HintText.Text, Converter={StaticResource IsNotEmptyConverter}}"
                            Value="{x:False}" ComparisonCondition="Equal">
                            <ChangePropertyAction TargetObject="HintText" PropertyName="IsVisible" Value="False" />
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <packIcon:PackIcon
                        Grid.Row="0"
                        Grid.Column="0"
                        Width="24"
                        Theme="{DynamicResource MaterialColoredIconStyle}"
                        Height="24"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsVisible="{formBuilding:FormBinding IconVisibility}"
                        Kind="{formBuilding:FormBinding Icon}" />
                    <TextBlock
                        Name="HintText"
                        Grid.Row="0"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="12"
                        Text="{formBuilding:FormBinding Name}"
                        ToolTip.Tip="{formBuilding:FormBinding ToolTip}" />
                    <ListBox
                        Name="ValueHolderControl"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Padding="0,8,0,0"
                        BorderThickness="0"
                        DisplayMemberBinding="{formBuilding:FormBinding DisplayPath}"
                        IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                        ItemsSource="{formBuilding:FormBinding ItemsSource}"
                        SelectedValue="{formBuilding:FormBinding Value}"
                        SelectedValueBinding="{formBuilding:FormBinding ValuePath}">
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                                <Setter Property="Margin" Value="2,6,0,6" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <RadioButton Content="{Binding}"
                                                         IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                    </ListBox>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MaterialRadioButtonsInlineSelectionPresenterTemplate"
                             TargetType="{x:Type defaults:SelectionPresenter}">
                <Grid IsVisible="{formBuilding:FormBinding IsVisible}"
                      Margin="8"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center">
                    <Interaction.Behaviors>
                        <DataTriggerBehavior
                            Binding="{Binding #HintText.Text, Converter={StaticResource IsNotEmptyConverter}}"
                            Value="{x:False}" ComparisonCondition="Equal">
                            <ChangePropertyAction TargetObject="HintText" PropertyName="IsVisible" Value="False" />
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <packIcon:PackIcon
                        x:Name="Icon"
                        Grid.Row="0"
                        Grid.Column="0"
                        Width="24"
                        Theme="{DynamicResource MaterialColoredIconStyle}"
                        Height="24"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsVisible="{formBuilding:FormBinding IconVisibility}"
                        Kind="{formBuilding:FormBinding Icon}" />
                    <TextBlock
                        Name="HintText"
                        Grid.Row="0"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="12"
                        Text="{formBuilding:FormBinding Name}"
                        ToolTip.Tip="{formBuilding:FormBinding ToolTip}">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #HintText.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #HintText.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </TextBlock>
                    <ListBox
                        Name="ValueHolderControl"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Padding="0,8,0,0"
                        BorderThickness="0"
                        DisplayMemberBinding="{formBuilding:FormBinding DisplayPath}"
                        IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                        ItemsSource="{formBuilding:FormBinding ItemsSource}"
                        SelectedValue="{formBuilding:FormBinding Value}"
                        SelectedValueBinding="{formBuilding:FormBinding ValuePath}">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsFocused}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsFocused}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                                <Setter Property="Margin" Value="2,6,12,6" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <RadioButton Padding="4,0,0,0" Content="B"
                                                         IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                    </ListBox>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MaterialRadioButtonsInlineRightAlignedSelectionPresenterTemplate"
                             TargetType="{x:Type defaults:SelectionPresenter}">
                <Grid IsVisible="{formBuilding:FormBinding IsVisible}"
                      Margin="8"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center">
                    <Interaction.Behaviors>
                        <DataTriggerBehavior
                            Binding="{Binding #HintText.Text, Converter={StaticResource IsNotEmptyConverter}}"
                            Value="{x:False}" ComparisonCondition="Equal">
                            <ChangePropertyAction TargetObject="HintText" PropertyName="IsVisible" Value="False" />
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <packIcon:PackIcon
                        x:Name="Icon"
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="0,0,16,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Theme="{StaticResource MaterialColoredIconStyle}"
                        Kind="{formBuilding:FormBinding Icon}"
                        IsVisible="{formBuilding:FormBinding IconVisibility}" />
                    <TextBlock
                        Name="HintText"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="{TemplateBinding FontSize}"
                        Text="{formBuilding:FormBinding Name}"
                        ToolTip.Tip="{formBuilding:FormBinding ToolTip}">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #HintText.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #HintText.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </TextBlock>
                    <ListBox
                        Name="ValueHolderControl"
                        Grid.Row="0"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        DisplayMemberBinding="{formBuilding:FormBinding DisplayPath}"
                        IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                        ItemsSource="{formBuilding:FormBinding ItemsSource}"
                        SelectedValue="{formBuilding:FormBinding Value}"
                        SelectedValueBinding="{formBuilding:FormBinding ValuePath}">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsPointerOver}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsFocused}"
                                                 ComparisonCondition="Equal" Value="{x:True}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{DynamicResource MaterialPrimaryMidBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #ValueHolderControl.IsFocused}"
                                                 ComparisonCondition="Equal" Value="{x:False}">
                                <ChangePropertyAction PropertyName="Foreground" TargetObject="Icon"
                                                      Value="{Binding #HintText.Foreground}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                                <Setter Property="Margin" Value="2,6,12,6" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <RadioButton
                                                Padding="4,0,0,0" Content="{Binding}"
                                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                    </ListBox>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
        <ResourceInclude Source="IconStyles.axaml" />

    </ResourceDictionary.MergedDictionaries>


    <ControlTheme x:Key="{x:Type defaults:SelectionPresenter}" TargetType="{x:Type defaults:SelectionPresenter}">
        <Setter Property="Margin" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource MaterialComboBoxSelectionPresenterTemplate}" />
        <Setter Property="(Interaction.Behaviors)">
            <BehaviorCollectionTemplate>
                <BehaviorCollection>
                    <DataTriggerBehavior Binding="{formBuilding:FormBinding SelectionType}" ComparisonCondition="Equal"
                                         Value="{x:Static annotations:SelectionType.RadioButtons}">
                        <ChangePropertyAction PropertyName="Template"
                                              Value="{StaticResource MaterialRadioButtonsSelectionPresenterTemplate}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{formBuilding:FormBinding SelectionType}" ComparisonCondition="Equal"
                                         Value="{x:Static annotations:SelectionType.RadioButtonsInline}">
                        <ChangePropertyAction PropertyName="Template"
                                              Value="{StaticResource MaterialRadioButtonsInlineSelectionPresenterTemplate}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{formBuilding:FormBinding SelectionType}" ComparisonCondition="Equal"
                                         Value="{x:Static annotations:SelectionType.RadioButtonsInlineRightAligned}">
                        <ChangePropertyAction PropertyName="Template"
                                              Value="{StaticResource MaterialRadioButtonsInlineRightAlignedSelectionPresenterTemplate}" />
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{formBuilding:FormBinding SelectionType}" ComparisonCondition="Equal"
                                         Value="{x:Static annotations:SelectionType.ComboBoxEditable}">
                        <ChangePropertyAction PropertyName="Template"
                                              Value="{StaticResource MaterialEditableComboBoxSelectionPresenterTemplate}" />
                    </DataTriggerBehavior>
                </BehaviorCollection>
            </BehaviorCollectionTemplate>
        </Setter>

    </ControlTheme>
</ResourceDictionary>